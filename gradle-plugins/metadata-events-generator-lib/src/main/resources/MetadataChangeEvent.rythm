@import com.linkedin.metadata.generator.SingleAspectEventSpec;
@import com.linkedin.metadata.generator.SchemaGeneratorUtil;
@args SingleAspectEventSpec eventSpec
namespace @(eventSpec.getNamespace())

import com.linkedin.avro2pegasus.events.KafkaAuditHeader
import com.linkedin.metadata.events.ChangeType
import com.linkedin.metadata.events.IngestionTrackingContext
import @eventSpec.getUrnType()
import @eventSpec.getFullValueType()

/**
 * MetadataChangeEvent for the @(eventSpec.getShortUrn()) with @(eventSpec.getShortValueType()) aspect.
 */
@@MetadataChangeEvent
record MetadataChangeEvent {

  /**
   * Kafka audit header. See go/kafkaauditheader for more info.
   */
  auditHeader: optional KafkaAuditHeader

  /**
   * @(eventSpec.getShortUrn()) as the key for the MetadataChangeEvent.
   */
  urn: @(eventSpec.getShortUrn())

  /**
   * Value of the proposed @eventSpec.getShortValueType() change.
   */
  proposedValue: optional @eventSpec.getShortValueType()

  /**
   * Change type.
   */
  changeType: optional union[null, ChangeType] = null

  /**
   * Tracking context to identify the lifecycle of the trackable ingestion item.
   */
  ingestionTrackingContext: optional union[null, IngestionTrackingContext] = null
}