namespace com.linkedin.testing.mxe.bar.annotatedAspectBar

import com.linkedin.avro2pegasus.events.KafkaAuditHeader
import com.linkedin.common.AuditStamp
import com.linkedin.metadata.events.ChangeType
import com.linkedin.metadata.events.IngestionTrackingContext
import com.linkedin.metadata.events.IngestionMode
import com.linkedin.testing.BarUrn
import com.linkedin.testing.AnnotatedAspectBar

/**
 * MetadataAuditEvent for the BarUrn with AnnotatedAspectBar aspect.
 */
@MetadataAuditEvent
record MetadataAuditEvent {

  /**
   * Kafka audit header for the MetadataAuditEvent.
   */
  auditHeader: optional KafkaAuditHeader

  /**
   * BarUrn as the key for the MetadataAuditEvent.
   */
  urn: BarUrn

  /**
   * Aspect of the AnnotatedAspectBar before the update.
   */
  oldValue: optional AnnotatedAspectBar

  /**
   * Aspect of the AnnotatedAspectBar after the update.
   */
  newValue: AnnotatedAspectBar

  /**
   * Change type.
   */
  changeType: optional union[null, ChangeType] = null

  /**
   * Tracking context to identify the lifecycle of the trackable ingestion item.
   */
  ingestionTrackingContext: optional union[null, IngestionTrackingContext] = null

  /**
   * Audit info (i.e. createdon, createdby, createdfor) to track the version history of metadata changes.
   */
  auditStamp: union[null, AuditStamp] = null

  /**
   * Type of the ingestion. Allow null for backward compatibility. Downstream should treat null as live ingestion.
   */
  ingestionMode: optional union[null, IngestionMode] = null
}