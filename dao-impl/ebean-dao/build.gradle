apply plugin: 'java'

apply from: "$rootDir/gradle/java-publishing.gradle"

configurations {
  enhance
}

dependencies {
  compile project(':core-models-utils')
  compile project(':dao-api')
  compile externalDependency.ebean
  compile externalDependency.jsonSimple
  compile externalDependency.guava

  compileOnly externalDependency.ebeanAgent
  compileOnly externalDependency.lombok

  annotationProcessor externalDependency.lombok

  testCompile project(':testing:core-models-testing')
  testCompile project(':testing:test-models')
  testCompile externalDependency.mysql
  testCompile externalDependency.h2
  testCompile externalDependency.mockito

  enhance externalDependency.ebeanAgent
}

// Some unit tests require advanced MySQL syntax such as 'generated column' which is not supported by most in-memory DB.
// Therefore, these tests require connections to a full-fledged MySQL DB.
//
// If you would like to run these tests, please first establish a connection to a dev MySQL instance by running:
// ssh -L 3309:makto-db-313.corp.linkedin.com:3306 [your-username]-ld3.linkedin.biz
// Then run: ./gradlew build -Ptest-ebean-dao
test {
  if (!project.hasProperty('test-ebean-dao')) {
    exclude '**/EBeanLocalAccessTest.class'
    exclude '**/EbeanLocalDAOTest.class'
  }
}

project.compileJava {
  doLast {
    ant.taskdef(name: 'ebean', classname: 'io.ebean.enhance.ant.AntEnhanceTask',
        classpath: project.configurations.enhance.asPath)
    ant.ebean(classSource: "${project.buildDir}/classes/java/main", packages: 'com.linkedin.metadata.dao',
        transformArgs: 'debug=1')
  }
}
