namespace com.linkedin.metadata.query

import com.linkedin.common.AuditStamp
import com.linkedin.common.Urn

/**
 * The additional metadata for a list result
 */
record ListResultMetadata {

  /**
   * A list of extra information that positionally corresponds to the aspects returned from the list query
   */
  extraInfos: array[
    /**
     * Extra information associated to a metadata aspect.
     */
    record ExtraInfo {

      /**
       * The urn for the entity that owns the metadata aspect
       */
      urn: Urn

      /**
       * The version number of the metadata aspect.
       */
      version: long

      /**
       * The audit trail associated with the version
       */
      audit: AuditStamp

      /**
       * The emit time of the MCE that last modified this aspect.
       * This is the same emitTime set in IngestionTrackingContext
       * If an aspect is added / modified without providing an IngestionTrackingContext, this will be null.
       *
       * This value is different from lastmodifiedon / the timestamp in AuditStamp since auditStamp
       * is created when the restli resource receives the ingestion request.
       * This is set by the MCE producers (or MCE consumers if not set by producers)
       *
       * This will be null in the following scenarios:
       * - The record is from the old schema
       * - The record was inserted before we started persisting emitTime to the new schema
       * - The record was inserted via ingest instead of ingestWithTracking
       */
       emitTime: optional long
    }]
}